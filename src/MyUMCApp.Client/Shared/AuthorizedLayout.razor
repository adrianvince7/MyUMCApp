@using Microsoft.AspNetCore.Components.Authorization
@using MyUMCApp.Client.Auth
@inherits LayoutComponentBase

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <div class="page">
                <div class="sidebar">
                    <NavMenu />
                </div>

                <main>
                    <div class="top-row px-4">
                        <div class="user-info">
                            <span>@context.User.FindFirst("name")?.Value</span>
                            <button class="btn btn-link" @onclick="HandleLogout">Logout</button>
                        </div>
                    </div>

                    <article class="content px-4">
                        @Body
                    </article>
                </main>
            </div>
        </Authorized>
        <NotAuthorized>
            <RedirectToLogin />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

<style>
    .page {
        position: relative;
        display: flex;
        flex-direction: row;
    }

    main {
        flex: 1;
    }

    .sidebar {
        background-color: #7b1fa2;
    }

    .top-row {
        background-color: #f7f7f7;
        border-bottom: 1px solid #d6d5d5;
        justify-content: flex-end;
        height: 3.5rem;
        display: flex;
        align-items: center;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-info span {
        color: #6a1b9a;
        font-weight: 500;
    }

    .btn-link {
        color: #7b1fa2;
        text-decoration: none;
        padding: 0;
    }

    .btn-link:hover {
        color: #6a1b9a;
        text-decoration: underline;
    }

    @media (max-width: 640.98px) {
        .page {
            flex-direction: column;
        }

        .sidebar {
            height: auto;
            position: sticky;
            top: 0;
            z-index: 1;
        }
    }
</style>

@code {
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    [Inject] private IAuthService AuthService { get; set; } = default!;

    private async Task HandleLogout()
    {
        await AuthService.SignOutAsync(string.Empty); // User ID will be extracted from claims
        NavigationManager.NavigateTo("/login");
    }
} 